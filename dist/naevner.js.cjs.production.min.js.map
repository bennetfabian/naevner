{"version":3,"file":"naevner.js.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["/*! naevner v1.0.0 | MIT */\ntype Naevner = (color: string, approximationSuffix?: string) => string;\n\nconst naevner: Naevner = (color, approximationSuffix = \"ish\") => {\n  let lightness,\n      lightnessToPrint,\n      hue,\n      hueWithNuanceToPrint,\n      hueNuance,\n      saturation,\n      saturationToPrint,\n      approximationSuffixToPrint = approximationSuffix,\n      colorDescription,\n      parsedColor;\n\n  // hexToRGB + RGBToHSL functions from https://css-tricks.com/converting-color-spaces-in-javascript/\n  function hexToRGB(h: string): { r: number, g: number, b: number } {\n    let r: string = '0', g: string = '0', b: string = '0';\n\n    if (h.length == 4) {\n      r = \"0x\" + h[1] + h[1];\n      g = \"0x\" + h[2] + h[2];\n      b = \"0x\" + h[3] + h[3];\n      \n    } else if (h.length == 7) {\n      r = \"0x\" + h[1] + h[2];\n      g = \"0x\" + h[3] + h[4];\n      b = \"0x\" + h[5] + h[6];\n    }\n\n    return { \n      r: parseInt(`${r}`), \n      g: parseInt(`${g}`), \n      b: parseInt(`${b}`) \n    }\n  }\n\n  function RGBToHSL(r: any, g: any, b: any): { h: number, s: number, l: number } {\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    // Find greatest and smallest channel values\n    let cmin = Math.min(r,g,b),\n        cmax = Math.max(r,g,b),\n        delta = cmax - cmin,\n        h = 0,\n        s = 0,\n        l = 0;\n\n  // Calculate hue\n    // No difference\n    if (delta == 0)\n      h = 0;\n    // Red is max\n    else if (cmax == r)\n      h = ((g - b) / delta) % 6;\n    // Green is max\n    else if (cmax == g)\n      h = (b - r) / delta + 2;\n    // Blue is max\n    else\n      h = (r - g) / delta + 4;\n\n    h = Math.round(h * 60);\n      \n    // Make negative hues positive behind 360Â°\n    if (h < 0)\n        h += 360;\n\n    // Calculate lightness\n    l = (cmax + cmin) / 2;\n\n    // Calculate saturation\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n      \n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n\n    return {\n      h: Math.floor(h),\n      s: Math.floor(s),\n      l: Math.floor(l),\n    };\n  }\n\n  const numberIsInRange = (colorAspectValue: number, range: string) => {\n    var fullRange = range.indexOf(\"-\"); \n    var startOfRange = parseInt(range.substr(0, fullRange));\n    var endOfRange = parseInt(range.substr(fullRange + 1)); \n    if(colorAspectValue >= startOfRange && colorAspectValue <= endOfRange){\n      return true;\n    } else{\n      return false;\n    }\n  }\n\n  //parse color input\n  parsedColor = /^#.*/g.test(color) ? color : \"#\" + color;\n\n  //assess color code:\n  const colorInRGB = hexToRGB(parsedColor);\n  const { h, s, l } = RGBToHSL(colorInRGB.r, colorInRGB.g, colorInRGB.b);\n\n  //reset values\n  lightness = null;\n  lightnessToPrint = null;\n  hue = null;\n  hueWithNuanceToPrint = null;\n  hueNuance = null;\n  saturation = null;\n  saturationToPrint = null;\n\n  //determine saturation term\n  if      ( numberIsInRange(s, \"0-0\") )    { saturation = \"monochrome\" }\n  else if ( numberIsInRange(s, \"1-6\") )    { saturation = \"grey\" }\n  else if ( numberIsInRange(s, \"7-10\") )    { saturation = `grey${approximationSuffixToPrint}` }\n  else if ( numberIsInRange(s, \"11-35\") )   { saturation = \"faded\" }\n  else if ( numberIsInRange(s, \"36-65\") )   { saturation = \"calm\" }\n  else if ( numberIsInRange(s, \"66-90\") )   { saturation = \"clear\" }\n  else if ( numberIsInRange(s, \"91-100\") )  { saturation = \"vibrant\" }\n\n  //determine lightness term\n  if      ( numberIsInRange(l, \"0-5\") )    { lightness = \"black\" }\n  else if ( numberIsInRange(l, \"6-10\") )   { lightness = \"very dark\" }\n  else if ( numberIsInRange(l, \"11-35\") )  { lightness = \"dark\" }\n  else if ( numberIsInRange(l, \"36-65\") )  { lightness = null }\n  else if ( numberIsInRange(l, \"66-85\") )  { lightness = \"light\" }\n  else if ( numberIsInRange(l, \"86-98\") )  { lightness = \"very light\" }\n  else if ( numberIsInRange(l, \"98-100\") ) { lightness = \"white\" }\n\n  //determine hue term\n  if      ( (numberIsInRange(h, \"0-5\")) || (numberIsInRange(h, \"346-360\")) ) {\n    \n    if ( (saturation !== \"grey\") && (lightness !== \"black\") && (l < 20 || s < 40) ){ hue = \"brown\"; hueNuance=\"red\" }\n    else if ( l < 30 || s < 50 ) { hue = \"red\"; hueNuance=\"brown\" }\n    else{ hue = \"red\"; hueNuance=null }\n    \n  }\n  else if ( numberIsInRange(h, \"6-9\") )    { //orange-ish red\n\n    if ( (saturation !== \"grey\") && (lightness !== \"black\") && (l < 70 || s < 50) ){ hue = \"brown\"; hueNuance=\"orange\" }\n    else{ hue = \"red\"; hueNuance=\"orange\" }\n    \n  }\n  else if ( numberIsInRange(h, \"9-12\") )   { //red-ish orange\n    \n    if ( (saturation !== \"grey\") && (lightness !== \"black\") && (l < 70 || s < 50) ){ hue = \"orange\"; hueNuance=\"brown\" }\n    else if ( l < 48 || s < 50 ) { hue = \"brown\"; hueNuance=\"orange\" }\n    else{ hue = \"orange\"; hueNuance=\"red\"  }\n    \n  }\n  else if ( numberIsInRange(h, \"13-35\") )   { // orange\n\n    if ( (saturation !== \"grey\") && (lightness !== \"black\") && (l < 35 || s < 50) ) { hue = \"brown\"; hueNuance=\"orange\" }\n    // else if ( l >= 60 || s < 90 ) { hue = \"orange\"; hueNuance=\"brown\" }\n    else{ hue = \"orange\"; hueNuance=null }\n  }\n  else if ( numberIsInRange(h, \"36-42\") )   { //yellow-ish orange\n\n    \n    if ( (saturation !== \"grey\") && (lightness !== \"black\") && ( l < 50) ||  s < 70 ){ hue = \"brown\"; hueNuance=\"olive\" }\n    else{ hue = \"orange\"; hueNuance=\"yellow\" }\n  }\n  else if ( numberIsInRange(h, \"43-46\") )   { //orange-ish yellow\n\n    if (  (saturation !== \"grey\") && (lightness !== \"black\") && (l < 50 ||  s < 70) ){ hue = \"olive\"; hueNuance=\"brown\" }\n    else{ hue = \"yellow\"; hueNuance=\"orange\" }\n\n  }\n  else if ( numberIsInRange(h, \"47-61\") )   { //yellow\n    \n    if ( (saturation !== \"grey\") && (lightness !== \"black\") && (l < 50 ||  s < 70 ) ){ hue = \"olive\"; hueNuance=null }\n    else{ hue = \"yellow\"; hueNuance=null }\n\n  }\n  else if ( numberIsInRange(h, \"62-67\") )   { //green-ish yellow\n\n    if ( (saturation !== \"grey\") && (lightness !== \"black\") && ( l < 50 ||  s < 70 ) ){ hue = \"olive\"; hueNuance=\"green\" }\n    else{ hue = \"yellow\"; hueNuance=\"green\" }\n\n  }\n  else if ( numberIsInRange(h, \"68-74\") )   { //yellow-ish green\n\n    if ( (saturation !== \"grey\") && (lightness !== \"black\") && ( l < 50 ||  s < 70 ) ){ hue = \"green\"; hueNuance=\"olive\" }\n    else{ hue = \"green\"; hueNuance=\"yellow\" }\n\n  }\n  else if ( numberIsInRange(h, \"75-147\") )  { hue = \"green\"; hueNuance=null }\n  else if ( numberIsInRange(h, \"148-157\") ) { hue = \"green\"; hueNuance=\"turquoise\" }\n  else if ( numberIsInRange(h, \"158-172\") ) { hue = \"turquoise\"; hueNuance=null }\n  else if ( numberIsInRange(h, \"173-193\") ) { hue = \"cyan\"; hueNuance=null }\n  else if ( numberIsInRange(h, \"194-201\") ) { hue = \"cyan\"; hueNuance=\"blue\" }\n  else if ( numberIsInRange(h, \"202-211\") ) { hue = \"blue\"; hueNuance=\"cyan\" }\n  else if ( numberIsInRange(h, \"212-255\") ) { hue = \"blue\"; hueNuance=null }\n  else if ( numberIsInRange(h, \"256-258\") ) { hue = \"blue\"; hueNuance=\"purple\" }\n  else if ( numberIsInRange(h, \"259-265\") ) { hue = \"purple\"; hueNuance=\"blue\" }\n  else if ( numberIsInRange(h, \"266-280\") ) { hue = \"purple\"; hueNuance=null }\n  else if ( numberIsInRange(h, \"281-287\") ) { hue = \"purple\"; hueNuance=\"magenta\" }\n  else if ( numberIsInRange(h, \"288-298\") ) { hue = \"magenta\"; hueNuance=\"purple\" }\n  else if ( numberIsInRange(h, \"299-316\") ) { hue = \"magenta\"; hueNuance=null }\n  else if ( numberIsInRange(h, \"317-337\") ) {  //red-ish magenta\n\n    if ( (saturation !== \"grey\") && (lightness !== \"black\") && (l < 30 || s < 40) ){ hue = \"magenta\"; hueNuance=\"brown\" }\n    else{ hue = \"magenta\"; hueNuance=\"red\" }\n    \n  }\n  else if ( numberIsInRange(h, \"338-345\") ) { //magenta-ish red\n    \n    if ( (saturation !== \"grey\") && (lightness !== \"black\") && (l < 35 || s < 50) ) { hue = \"brown\"; hueNuance=\"magenta\" }\n    else{ hue = \"red\"; hueNuance=\"magenta\" }\n    \n  }\n\n  //For the last two groups below, we need to construct a natural-language sentence that can handle multiple adjectives with proper punctuation\n  lightnessToPrint = lightness ? lightness + \", \" : \"\";\n  saturationToPrint = hueNuance ? saturation + \", \" : saturation + \" \";\n  hueWithNuanceToPrint = hueNuance ? hueNuance + approximationSuffixToPrint + \" \" + hue : hue;\n\n  //Is monochrome\n  if (saturation == \"monochrome\"){\n    if (lightness==\"black\" || lightness==\"white\"){\n      colorDescription = `${lightness}`;\n    } else {\n      if (!lightness){lightness = \"\"}\n      colorDescription = `${lightness} grey`;\n    }\n  } \n\n  //Tinted black\n  else if (\n    lightness == \"black\"){ colorDescription = `${hue}-tinted black`;\n  }\n\n  //Tinted white\n  else if(lightness == \"white\"){\n    colorDescription = `${hue}-tinted off-white`;\n  }\n\n  //Tinted grey - combine hue, lightness, saturation to determine color name:\n  else if(saturation == \"grey\"){ colorDescription = `${lightnessToPrint}${hue}${approximationSuffixToPrint} ${saturation}`; }\n\n  //Any other color - combine hue, lightness, saturation to determine color name:\n  else{ colorDescription = `${lightnessToPrint}${saturationToPrint}${hueWithNuanceToPrint}`; }\n\n  //return color name\n  return colorDescription;\n\n}\n\nexport default naevner;"],"names":["color","approximationSuffix","lightness","lightnessToPrint","hue","hueNuance","saturation","colorDescription","approximationSuffixToPrint","numberIsInRange","colorAspectValue","range","fullRange","indexOf","startOfRange","parseInt","substr","endOfRange","colorInRGB","h","r","g","b","length","hexToRGB","test","cmin","Math","min","cmax","max","delta","s","l","round","abs","toFixed","floor","RGBToHSL"],"mappings":"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"}